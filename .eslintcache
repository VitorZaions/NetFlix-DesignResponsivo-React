[{"C:\\Projetos\\netflix-design\\src\\index.js":"1","C:\\Projetos\\netflix-design\\src\\App.js":"2","C:\\Projetos\\netflix-design\\src\\Tmdb.js":"3","C:\\Projetos\\netflix-design\\src\\components\\HeaderTop\\Index.js":"4","C:\\Projetos\\netflix-design\\src\\components\\FeaturedMovie\\Index.js":"5","C:\\Projetos\\netflix-design\\src\\components\\MovieRow\\Index.js":"6","C:\\Projetos\\netflix-design\\src\\components\\Footer\\Index.js":"7"},{"size":198,"mtime":1607484319891,"results":"8","hashOfConfig":"9"},{"size":1962,"mtime":1607552382715,"results":"10","hashOfConfig":"9"},{"size":2218,"mtime":1607497267172,"results":"11","hashOfConfig":"9"},{"size":488,"mtime":1607540414231,"results":"12","hashOfConfig":"9"},{"size":1665,"mtime":1607553285158,"results":"13","hashOfConfig":"9"},{"size":1671,"mtime":1607546310466,"results":"14","hashOfConfig":"9"},{"size":165,"mtime":1607551015782,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15dof62",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"18"},"C:\\Projetos\\netflix-design\\src\\index.js",[],["37","38"],"C:\\Projetos\\netflix-design\\src\\App.js",["39"],"import React, { useEffect, useState } from \"react\";\nimport Tmbd from \"./Tmdb\";\nimport './App.css';\nimport HeaderTop from './components/HeaderTop/Index'\nimport MovieRow from \"./components/MovieRow/Index\";\nimport FeaturedMovie from \"./components/FeaturedMovie/Index\"\nimport Footer from './components/Footer/Index'\nimport Tmdb from \"./Tmdb\";\nexport default () => {\n\n  const [movielist, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [BlackHheader, setBlackHeader] = useState(false);\n\n  useEffect( () => {\n   const loadall = async () => {\n\n    // Função para pegar a lista moviedb\n    let list = await Tmbd.getHomeList();\n    setMovieList(list);\n\n   // Pegando o featured\n   let originals = list.filter(i=>i.slug === 'originals');\n   let random = Math.floor(Math.random() * (originals[0].items.results.length -1));\n   let choosen = originals[0].items.results[random];\n   let chooseninfo = await Tmdb.GetMovieInfo(choosen.id, 'tv');\n   setFeaturedData(chooseninfo);\n\n    console.log(chooseninfo);\n\n  }\n    loadall();    \n  }, []);\n\n  useEffect(() => {\n    const scrollListener  = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    \n    return () =>{\n      window.removeEventListener('scroll', scrollListener);\n    }\n\n  }, []);\n\nreturn(\n  <div className=\"page\">\n  \n  <HeaderTop black={BlackHheader}/>\n\n  {featuredData &&\n    <FeaturedMovie item={featuredData}/>\n  }\n  \n\n   <section className = \"lists\">\n     {movielist.map((item,key) => (\n       <MovieRow key={key} title = {item.title} items = {item.items} />\n     ))}\n   </section>\n\n   <Footer/>\n   {movielist.length <= 0 &&\n   <div className=\"loading\">     \n   <img src = \"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif\" alt = \"Loading\"/> \n   </div>\n   }\n   \n  </div>  \n);\n}","C:\\Projetos\\netflix-design\\src\\Tmdb.js",["40"],"const API_KEY = 'd6812511f86367f96b32be1738a9d27c';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default{\r\n getHomeList: async () => {\r\n     return [ {\r\n         slug: 'originals',\r\n         title: 'Originais netflix',\r\n         items: await basicFetch(`/discover/tv?with_network=213&language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n     {\r\n         slug: 'trending',\r\n         title: 'Recomendados para você',\r\n         items: await basicFetch(`/trending/all/week?language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n     {\r\n         slug: 'toprated',\r\n         title: 'Em alta',\r\n         items: await basicFetch(`/movie/top_rated?language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n     {\r\n         slug: 'action',\r\n         title: 'Ação',\r\n         items: await basicFetch(`/discover/movie?with_genres=28&language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n     {\r\n         slug: 'comedy',\r\n         title: 'Comédia',\r\n         items: await basicFetch(`/discover/movie?with_genres=35&language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n     {\r\n         slug: 'horror',\r\n         title: 'Terror',\r\n         items: await basicFetch(`/discover/movie?with_genres=27&language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n     {\r\n         slug: 'romance',\r\n         title: 'Romance',\r\n         items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n     {\r\n         slug: 'documentary',\r\n         title: 'Documentário',\r\n         items: await basicFetch(`/discover/movie?with_genres=99&language=pt-br&api_key=${API_KEY}`)\r\n     },\r\n    ];\r\n },\r\n\r\n GetMovieInfo: async (MovieID,tipo) => {\r\n   let info = {};\r\n\r\n   if(MovieID){\r\n       switch(tipo){\r\n           case 'movie':\r\n           info = await basicFetch(`/movie/${MovieID}?language=pt-br&api_key=${API_KEY}`)\r\n           break;\r\n           case 'tv':\r\n           info = await basicFetch(`/tv/${MovieID}?language=pt-br&api_key=${API_KEY}`)\r\n           break;\r\n           default:\r\n               info = null;\r\n           break;\r\n       }\r\n   }\r\n   \r\n   return info;\r\n }\r\n}","C:\\Projetos\\netflix-design\\src\\components\\HeaderTop\\Index.js",["41","42"],"import React from 'react';\r\nimport './HeaderTop.css';\r\n\r\nexport default ({black}) => {\r\nreturn(\r\n  <header className={black ?  'black' : ''}>\r\n     <div className=\"header--logo\">\r\n       <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflix\"/>\r\n     </div>\r\n\r\n    <div className=\"header--user\" alt=\"usuário\">\r\n        <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"/>\r\n    </div>\r\n\r\n </header>\r\n\r\n);\r\n}","C:\\Projetos\\netflix-design\\src\\components\\FeaturedMovie\\Index.js",["43"],"import React from 'react';\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstdate = new Date(item.first_air_date);\r\n    let genres = [];\r\n\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n\r\n    if(description.length > 200){\r\n        description = description.substring(0,200) + \"...\"\r\n    }\r\n\r\n\r\n    //console.log(item);\r\n    return (\r\n     <section className=\"featured\" style={{\r\n       backgroundSize: 'cover',\r\n       backgroundPosition: 'center',\r\n       backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n     }}>\r\n     \r\n     <div className=\"featured--vertical\"> \r\n        <div className=\"featured--horizontal\">\r\n        <div className=\"featured--name\">{item.original_name}</div>   \r\n        <div className=\"featured--info\">\r\n            <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n      <div className=\"featured--year\">{firstdate.getFullYear()}</div>\r\n            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n        <div className=\"featured--description\">{description}</div>\r\n        <div className=\"featured--buttons\">\r\n            <a className=\"featured--watchbutton\" href={`/watch/${item.id}`}>➜ Assistir</a>\r\n            <a className=\"featured--mylistbutton\" href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n        </div>\r\n\r\n         <div className=\"featured--genres\"><strong>Gênero: </strong>{genres.join(', ')}</div>\r\n\r\n        </div>\r\n     </div>\r\n     </div>\r\n     \r\n            \r\n     \r\n     </section>\r\n\r\n    )\r\n}","C:\\Projetos\\netflix-design\\src\\components\\MovieRow\\Index.js",["44"],"import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default({title, items}) => {\r\n\r\n   const [scrollx,setScrollx] = useState(-400);\r\n\r\n   const HandleLeftArrow = () => {\r\n    let x = scrollx + Math.round(window.innerWidth / 2);\r\n    if(x > 0){\r\n      x = 0\r\n    }\r\n   setScrollx(x);\r\n\r\n   }\r\n\r\n   const HandleRightArrow = () => {\r\n    let x = scrollx - Math.round(window.innerWidth / 2);\r\n    let listw = items.results.length * 150;\r\n     if((window.innerWidth - listw) > x){\r\n      x = (window.innerWidth - listw) - 60;\r\n     }\r\n     setScrollx(x);\r\n   }\r\n    \r\n\r\n    return(\r\n     <div className=\"MovieRow\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"MovieRow--right\" onClick={HandleRightArrow}>\r\n          <NavigateNextIcon style = {{fontSize: 50}}/>          \r\n        </div>\r\n\r\n        <div className=\"MovieRow--left\"onClick={HandleLeftArrow}>\r\n          <NavigateBeforeIcon style={{fontSize:  50}}/>\r\n        </div>\r\n\r\n        <div className=\"MovieRow--listaarea\">\r\n          \r\n        <div className=\"MovieRow--list\" style = {{\r\n        marginLeft: scrollx, \r\n        width: items.results.length * 150,\r\n       // transition: all ease 0.2s;\r\n        }}>\r\n         {items.results.length > 0 && items.results.map((item,key)=>(\r\n         <div key={key} className=\"MovieRow--item\">\r\n         <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n         </div>\r\n        ))}\r\n             </div>       \r\n             ,\r\n        </div>\r\n     </div>      \r\n    );\r\n}\r\n","C:\\Projetos\\netflix-design\\src\\components\\Footer\\Index.js",["45"],"import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport default () => {\r\n  return (\r\n    <footer>\r\n    <h1> @ Vitor Zaions </h1>     \r\n    </footer>\r\n  )\r\n\r\n}\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":9,"column":1,"nodeType":"52","endLine":77,"endColumn":2},{"ruleId":"50","severity":1,"message":"53","line":11,"column":1,"nodeType":"52","endLine":75,"endColumn":2},{"ruleId":"50","severity":1,"message":"51","line":4,"column":1,"nodeType":"52","endLine":18,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":12,"column":9,"nodeType":"56","endLine":12,"endColumn":99},{"ruleId":"50","severity":1,"message":"51","line":4,"column":1,"nodeType":"52","endLine":52,"endColumn":2},{"ruleId":"50","severity":1,"message":"51","line":6,"column":1,"nodeType":"52","endLine":58,"endColumn":2},{"ruleId":"50","severity":1,"message":"51","line":4,"column":1,"nodeType":"52","endLine":11,"endColumn":2},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]